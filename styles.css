:where([class^="ri-"])::before {
  content: "\f3c2";
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.gauge {
  transform-origin: center;
  transition: transform 0.3s ease;
}

:root {
  --color-gray-900: #111827;
  --color-white: #ffffff;
  --color-primary: #15B8A6;
  --color-secondary: #0F766E;
  --color-gray-800: #1F2937;
  --color-gray-700: #374151;
  --color-gray-600: #4B5563;
  --color-gray-400: #9CA3AF;
  --color-gray-300: #D1D5DB;
}

.bg-gray-900 {
   background-color: var(--color-gray-900); 
  }
.text-white { color: var(--color-white); }
.min-h-screen { min-height: 100vh; }
.container { width: 100%; }
.mx-auto { margin-left: auto; margin-right: auto; }
.flex { display: flex; }
.grid { display: grid; }
.relative { position: relative; }
.absolute { position: absolute; }

/* utility classes */
.justify-between { justify-content: space-between; }
.items-center { align-items: center; }
.justify-center { justify-content: center; }
.flex-col { flex-direction: column; }
.text-center { text-align: center; }
.w-full { width: 100%; }

/* padding and margin */
.p-3 { padding: 0.75rem; }
.p-6 { padding: 1.5rem; }
.px-4 { padding-left: 1rem; padding-right: 1rem; }
.py-3 { padding-top: 0.75rem; padding-bottom: 0.75rem; }
.py-4 { padding-top: 1rem; padding-bottom: 1rem; }
.pt-4 { padding-top: 1rem; }
.pt-6 { padding-top: 1.5rem; }
.mb-2 { margin-bottom: 0.5rem; }
.mb-6 { margin-bottom: 1.5rem; }
.mb-8 { margin-bottom: 2rem; }
.mt-2 { margin-top: 0.5rem; }
.mt-6 { margin-top: 1.5rem; }

/*sizing and line height*/
.text-sm { font-size: 0.875rem; line-height: 1.25rem; }
.text-lg { font-size: 1.125rem; line-height: 1.75rem; }
.text-xl { font-size: 1.25rem; line-height: 1.75rem; }
.text-3xl { font-size: 1.875rem; line-height: 2.25rem; }
.text-4xl { font-size: 2.25rem; line-height: 2.5rem; }

.font-bold { font-weight: 700; }
.font-medium { font-weight: 500; }
.font-semibold { font-weight: 600; }

/* giving colours */
.text-primary { color: var(--color-primary); }
.bg-primary { background-color: var(--color-primary); }
.border-primary { border-color: var(--color-primary); }
.text-gray-300 { color: var(--color-gray-300); }
.text-gray-400 { color: var(--color-gray-400); }
.bg-gray-700 { background-color: var(--color-gray-700); }
.bg-gray-800 { background-color: var(--color-gray-800); }
.bg-gray-900 { background-color: rgba(55, 65, 81, 0.5); }

/* Interactions */
.cursor-pointer { cursor: pointer; }
.transition-colors { 
  transition-property: color, background-color, border-color;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms; 
}
.hover\:text-secondary:hover { color: var(--color-secondary); }
.hover\:bg-secondary:hover { background-color: var(--color-secondary); }
.hover\:bg-gray-600:hover { background-color: var(--color-gray-600); }

/* Responsive Grid */
.grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)); }
@media (min-width: 768px) {
  .md\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }
}

/* gapping , rounding and borderds  */
.gap-1 { gap: 0.25rem; }
.gap-2 { gap: 0.5rem; }
.gap-3 { gap: 0.75rem; }
.gap-4 { gap: 1rem; }
.gap-6 { gap: 1.5rem; }

.rounded { border-radius: 0.25rem; }
.rounded-lg { border-radius: 0.5rem; }
.rounded-xl { border-radius: 0.75rem; }
.rounded-button { border-radius: 0.5rem; }

.border-2 { border-width: 2px; }
.border-t { border-top-width: 1px; }
.border-gray-600 { border-color: var(--color-gray-600); }

.backdrop-blur-sm { backdrop-filter: blur(4px); }

.active\:transform:active { 
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) 
             rotate(var(--tw-rotate)) 
             skewX(var(--tw-skew-x)) 
             skewY(var(--tw-skew-y)) 
             scaleX(var(--tw-scale-x)) 
             scaleY(var(--tw-scale-y)); 
}
.active\:scale-95:active {
  --tw-scale-x: .95;
  --tw-scale-y: .95;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) 
             rotate(var(--tw-rotate)) 
             skewX(var(--tw-skew-x)) 
             skewY(var(--tw-skew-y)) 
             scaleX(var(--tw-scale-x)) 
             scaleY(var(--tw-scale-y));
}

.space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

.space-y-6 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
}
